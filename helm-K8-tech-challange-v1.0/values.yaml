# Default values for K8-tech-challange.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Values for Web Server
webServer:
  podLabels:
      app: web-app
  replicaCount: 3
  image:
    repository: nginxdemos/hello
    tag: 1.21.3
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  service:
    annotations: |
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
      service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:411331341867:certificate/certificate-id"
      #service.beta.kubernetes.io/aws-load-balancer-type: external
      service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
      service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing      
  
    type: LoadBalancer
    port: 443
    targetPort: 80

# Values for PostgreSQL Database
postgresql:
  podLabels:
    name: postgres-deployment
  enabled: true
  image:
    repository: postgres
    tag: latest
    pullPolicy: IfNotPresent
  postgresqlUsername: admin
  postgresqlPassword: examplePassword
  postgresqlDatabase: mydatabase
  volumeMounts:
      mountPath: /var/lib/postgresql/data
      name: db-data
  volumes:
      name: db-data 
  persistence:
    enabled: true
    size: 1Gi
    storageClass: standard
    accessModes: ReadWriteMany
    hostPath:
       path: "/data"
  persistanceclaim:
    storage: 1Gi 
    

# Values for Redis Cache
redis:
  enabled: true
  podLabels:
    name: redis-deployment
  image:
    repository: redis
    tag: 6.2.5
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  affinity:
    nodeAffinity:
            key: node-type
            operator: In
            values: cache
  service:
    type: ClusterIP
    port: 6379
    targetPort: 6379

# Autoscaling Configuration
autoscaling:
  webServer:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 70
  redis:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 60
    targetMemoryUtilizationPercentage: 80


image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true